Parameters:
  EnvironmentName:
    Default: exercise
    Description: An environment name that will be prefixed to resource names
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName} Public Subnet (AZ1)"
        
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName} Private Subnet (AZ1)"
        
  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref EnvironmentName
      ResourcesVpcConfig:
        SecurityGroupIds: 
          - !Ref EKSClusterSG
        SubnetIds: 
          - !Ref PrivateSubnet1
      RoleArn: !GetAtt EKSClusterRole.Arn
      
  EKSClusterSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow cluster communication with worker nodes
      VpcId: !Ref VPC
  
  EKSClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: eks.amazonaws.com
          Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy

  LoadBalancerControllerIAMPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - "ec2:DescribeVpcs"
              - "ec2:DescribeSubnets"
              - "ec2:DescribeInternetGateways"
              - "ec2:DescribeSecurityGroups"
              - "ec2:DescribeRouteTables"
              - "ec2:CreateSecurityGroup"
              - "ec2:CreateTags"
              - "ec2:DeleteTags"
              - "ec2:AuthorizeSecurityGroupIngress"
              - "ec2:RevokeSecurityGroupIngress"
              - "ec2:CreateRoute"
              - "ec2:DeleteRoute"
              - "ec2:CreateInternetGateway"
              - "ec2:DeleteInternetGateway"
              - "ec2:AttachInternetGateway"
              - "ec2:CreateVpc"
              - "ec2:DeleteVpc"
              - "ec2:CreateSubnet"
              - "ec2:DeleteSubnet"
              - "ec2:CreateLoadBalancer"
              - "ec2:DeleteLoadBalancer"
              - "ec2:DescribeLoadBalancers"
              - "ec2:ModifyLoadBalancerAttributes"
              - "ec2:DescribeLoadBalancerAttributes"
              - "ec2:DescribeTags"
              - "ec2:DescribeInstances"
              - "ec2:DescribeNetworkInterfaces"
              - "elasticloadbalancing:CreateLoadBalancer"
              - "elasticloadbalancing:CreateTargetGroup"
              - "elasticloadbalancing:DescribeTargetGroups"
              - "elasticloadbalancing:DescribeListeners"
              - "elasticloadbalancing:CreateListener"
              - "elasticloadbalancing:DeleteListener"
              - "elasticloadbalancing:ModifyListener"
              - "elasticloadbalancing:AddTags"
              - "elasticloadbalancing:RemoveTags"
              - "elasticloadbalancing:SetWebAcl"
              - "elasticloadbalancing:ModifyLoadBalancerAttributes"
              - "elasticloadbalancing:SetSecurityGroups"
              - "elasticloadbalancing:ModifyTargetGroup"
              - "elasticloadbalancing:RegisterTargets"
              - "elasticloadbalancing:DeregisterTargets"
              - "elasticloadbalancing:DeleteLoadBalancer"
              - "elasticloadbalancing:DescribeLoadBalancers"
              - "elasticloadbalancing:DescribeLoadBalancerPolicies"
              - "elasticloadbalancing:DescribeListeners"
              - "elasticloadbalancing:DescribeListenerCertificates"
              - "elasticloadbalancing:DescribeSSLPolicies"
              - "elasticloadbalancing:CreateListener"
              - "elasticloadbalancing:CreateRule"
              - "elasticloadbalancing:DeleteListener"
              - "elasticloadbalancing:DeleteRule"
              - "elasticloadbalancing:ModifyListener"
              - "elasticloadbalancing:ModifyRule"
              - "elasticloadbalancing:AddListenerCertificates"
              - "elasticloadbalancing:RemoveListenerCertificates"
              - "elasticloadbalancing:DescribeTargetGroupAttributes"
              - "elasticloadbalancing:ModifyTargetGroupAttributes"
              - "elasticloadbalancing:SetIpAddressType"
              - "elasticloadbalancing:SetRulePriorities"
              - "elasticloadbalancing:SetSecurityGroups"
              - "elasticloadbalancing:SetSubnets"
              - "elasticloadbalancing:CreateTargetGroup"
              - "elasticloadbalancing:DeleteTargetGroup"
              - "elasticloadbalancing:ModifyTargetGroup"
              - "elasticloadbalancing:RegisterTargets"
              - "elasticloadbalancing:DeregisterTargets"
              - "elasticloadbalancing:DescribeTargetHealth"
              - "elasticloadbalancing:ModifyTargetGroupAttributes"
            Resource: "*"

  LoadBalancerControllerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: eks.amazonaws.com
          Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - !GetAtt LoadBalancerControllerIAMPolicy.Arn

  LoadBalancerControllerDeployment:
    Type: AWS::EKS::Addon
    Properties:
      ClusterName: !Ref EKSCluster
      AddonName: aws-load-balancer-controller
      ServiceAccountRoleArn: !Ref LoadBalancerControllerRole

Outputs:
  
  VPC: 
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${EnvironmentName}-VPCID"
      
  PrivateSubnets:
    Description: Private subnets
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${EnvironmentName}-PrivateSubnet"
      
  EKSClusterEndpoint:
    Description: The endpoint for the EKS cluster
    Value: !GetAtt EKSCluster.Endpoint
    
  EKSClusterSGId: 
    Description: Security group allowing communication between control plane and nodes
    Value: !Ref EKSClusterSG
    Export:
      Name: !Sub "${EnvironmentName}-EKSClusterSG"

  LoadBalancerControllerIAMPolicy:
    Description: ARN of the IAM policy created for the AWS Load Balancer Controller
    Value: !Ref LoadBalancerControllerIAMPolicy
